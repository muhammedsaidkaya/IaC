---
- name: Install jq
  become: yes
  apt:
    name: jq
    state: present

- name: Create cluster keys
  shell: "kubectl exec vault-0 -- vault operator init -key-shares=1 -key-threshold=1 -format=json > cluster-keys.json"

- name: Register Unseal Key
  shell: "cat cluster-keys.json | jq -r '.unseal_keys_b64[]' "
  register: unseal_key
  ignore_errors: yes

- name: Register Token
  shell: "cat cluster-keys.json | jq -r '.root_token' "
  register: root_token
  ignore_errors: yes

  
- name: Unseal Vault operator
  shell: "kubectl exec vault-0 -- vault operator unseal {{ unseal_key.stdout_lines[0] }}"

- name: Vault Login
  shell: kubectl exec -it vault-0 -- sh -c "vault login {{ root_token.stdout_lines[0] }}"

- name: Enable Secret Path
  shell: kubectl exec -it vault-0 -- sh -c "vault secrets enable -path=secret kv-v2"

- name: Enable Kubernetes
  shell: kubectl exec -it vault-0 -- sh -c "vault auth enable kubernetes"

- name: Create kubernetes config
  shell: |
    kubectl exec -it vault-0 -- sh -c 'vault write auth/kubernetes/config \
        kubernetes_host="https://$KUBERNETES_PORT_443_TCP_ADDR:443" \
        token_reviewer_jwt="$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \
        kubernetes_ca_cert=@/var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
        issuer="https://kubernetes.default.svc.cluster.local"'
